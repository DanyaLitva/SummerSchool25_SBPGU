name: project

on: [push]

jobs:

  linux-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install OpenMPI
        run: sudo apt-get update && sudo apt-get install -y libopenmpi-dev openmpi-bin
      - name: Configure and Build
        run: |
          mkdir build
          cmake -B build -G "Unix Makefiles"
          cmake --build build -- -j4
          ./build/bin/test_project


  windows-build:
    runs-on: windows-latest
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-ninja
          mingw-w64-x86_64-msmpi
    - name: Put MSYS2_MinGW64 on PATH
      # there is not yet an environment variable for this path from msys2/setup-msys2
      run: echo "${{ runner.temp }}/msys64/mingw64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: download MS-MPI setup (SDK is from MSYS2)
      run: curl -L -O https://github.com/microsoft/Microsoft-MPI/releases/download/v10.1.1/msmpisetup.exe

    - name: Install mpiexec.exe (-force needed to bypass GUI on headless)
      run: .\msmpisetup.exe -unattend -force

    - name: test that mpiexec.exe exists

      run: Test-Path "C:\Program Files\Microsoft MPI\Bin\mpiexec.exe" -PathType leaf

    - name: put MSMPI_BIN on PATH (where mpiexec is)
      run: echo "C:\Program Files\Microsoft MPI\Bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - uses: actions/checkout@v2
      name: Checkout source code


    - name: CMake tests
      run: |
            mkdir build
            cmake -B build
            cmake --build build
            .\build\bin\test_project.exe